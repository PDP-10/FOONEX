
;COMPARISON OF DSK:<FOONEX>TTYSRV.MAC;87 AND DSK:<FOONEX>TTYSRV.MAC;94
;OPTIONS ARE    /3

**** FILE DSK:<FOONEX>TTYSRV.MAC;87, 2-2 (7981)
	SEARCH	PROLOG
**** FILE DSK:<FOONEX>TTYSRV.MAC;94, 2-2 (7981)
	SEARCH	PROLOG,MONSYM,MACSYM
***************

**** FILE DSK:<FOONEX>TTYSRV.MAC;87, 2-37 (8750)
INTERN XTTFLG						;
**** FILE DSK:<FOONEX>TTYSRV.MAC;94, 2-37 (8764)
INTERN XTTFLG
***************

**** FILE DSK:<FOONEX>TTYSRV.MAC;87, 6-23 (13870)
**** FILE DSK:<FOONEX>TTYSRV.MAC;94, 6-23 (13877)
IFDEF ITPP,<
LS TTCHIC,1		;SAVE A CHARACTER HERE
LS TTINPW,NLINES	;FOR INTELLIGENT TERMINAL PROTOCOL
; Definitions used by ITP
DEFSTR TIITP,TTINPW,0,1		; Using ITP at all
DEFSTR TISLH,TTINPW,1,1		; ^\ seen, waiting for command char
DEFSTR TICCH,TTINPW,2,1		; Command char seen, waiting for arg
DEFSTR TIALP,TTINPW,3,1		; Allocation in effect
DEFSTR TIHCP,TTINPW,4,1		; A prefix char was seen at TCI level
DEFSTR TICHR,TTINPW,12,8	; Char after ^\
DEFSTR TILAC,TTINPW,20,8	; Last ascii character seen at TTCHI level
DEFSTR TIFCH,TTINPW,35,12	; Full input character
DEFSTR TIHCH,TTINPW,28,5	; High (bucky) bits of character
DEFSTR TILCH,TTINPW,35,7	; Low bits of character
>;ITTP
***************

**** FILE DSK:<FOONEX>TTYSRV.MAC;87, 6-56 (15009)
;SPECIAL TTY FLAGS LH = FREEZE ON IF NEGATIVE, RH = DEFAULT
;TERMINAL TYPE - LINE NUÍBER ÉS INDEX FOR THIS, "XTTFLÇ"
XTTFLG:	
25				;0
25				;1
25				;2
25				;3
25				;4
25				;5
25				;6
25				;7
25				;10
25				;11
25				;12
25				;13
**** FILE DSK:<FOONEX>TTYSRV.MAC;94, 6-72 (15710)
;SPECIAL TTY FLAGS RH = DEFAULT TERMINAL TYPE - LINE NUMBER IS INDEX FOR THIS
;1B0 - HOLD ON FOR THIS LINE
;1B1 - NO PASSWORD NEEDED ON THIS LINE (SYMBOLICS ONLY)
XTTFLG:	
1B1+25				;0
1B1+25				;1
1B1+25				;2
1B1+25				;3
1B1+25				;4
1B1+25				;5
1B1+25				;6
1B1+25				;7
1B1+25				;10
1B1+25				;11
1B1+25				;12
1B1+25				;13
***************

**** FILE DSK:<FOONEX>TTYSRV.MAC;87, 6-78 (15368)
11				;console is a ti733
**** FILE DSK:<FOONEX>TTYSRV.MAC;94, 6-95 (16164)
1B1+27				;console is a ti733
***************

**** FILE DSK:<FOONEX>TTYSRV.MAC;87, 7-7 (15689)
**** FILE DSK:<FOONEX>TTYSRV.MAC;94, 7-7 (16489)
; B21-28, B29-35
; WIDTH,  HEIGHT
***************

**** FILE DSK:<FOONEX>TTYSRV.MAC;87, 7-11 (15852)
TTYPE0:	1B15+12B19	‰;(0) MOD 33	(nï lowår case)
	1B0+1B1+2B15+12B19	;(1) MOD 35 (FF+TAB)   "
	1B2+1B15«12B19		;(²) MOÄ 37 ¨LC)
	1B2+7B7			;(3© TI (LC+CÒPAD)
	1B2			;(4) Terminet 1200
	1B2			;(5) Imlac.
	1B2			;(6) IMLAC SITH LONG VECTORS
	1B2			;(7) NVT 
	1B2+6B7+6B11		;(10) LA30 GE TERMINET-300
TT733:	1B2+1B3+5B7		;(11) TI 733
	1B2+4B11«1B20		;(12) Scopes
	1777B11			;(13) Lineprocessors.
ttcrt:	1B2     		;(14) Datamedia 2500
	1B2			;(15) Datamedia 1520 for DARCOM.
	1B2			;(16) HP
	1B2			;(17) C100
	1B2			;(²0) TELERAÙ 1061
	1B2			;(21) ANN ARBOR
	1B2+1B2			;(22) VT-100 WITH TABS
	1B2			;(23) Heathkit H19
	1B2			;(24) DEC VT-52
	1B2			;(25) ANN ARBOR AMBASSADOR
REPEAT 50-<.-TTYPE0>,<		;SEE TO IT THAT THERE ARE
	1B2			;ALWAYS 50 OCTAL TERMINAL TYPES
**** FILE DSK:<FOONEX>TTYSRV.MAC;94, 7-13 (16688)
TTYPE0:	1B15+12B19+^D72B28	;(0) MOD 33	(no lower case)
	1B0+1B1+²B15+12B19«^D72Â28 ;¨1) MOD 35 (FF+TAB)   "
	1B2+1B15+12B19+^D72B28	;(2) MOD 37 (LC)
	1B2+7B7+^D72B28		;(3) TI (LC+CRPAD)
	1B2+^D72B28		;(4) Terminet 1200
	1B2+^D80B28+^D24B35	;(5) Imlac.
	1B2+^D80B28+^D24B35	;(6) IMLAC WITH LONG VECTORS
	1B2+^D80B28+^D24B35	;(7) NVT 
	1B2+6B7+6B11+ÞD80B28+^D24B35	;(10) LA30 GE TERMINET-300
TT733:	1B2+1B3+5B7+^D72B28	;(11) TI 733
	1B2+4B11+1B20+^D80B28+^D24B35	;(12) Scopes
	1777B11+^D80B28+^D24B35	;(13) Lineprocessors.
ttcrt:	1B2+^D80B28+^D24B35	;(14) Datamedia 2500
	1B2+^D80B28+^D24B35	;(15) Datamedia 1520 for DARCOM.
	1B2+^D80B28+^D24B35	;(16) HP
	1B2+^D80B28+^D24B35	;(17) C100
	1B2+^D80Â28+^D24B35	;(20) TELERAY 1061
	1B2+^D80B28+^D24B35	;(21) ANN ARBOR
	1B2+1B2+^D80B28+^D24B35	;(22) VT-100 WITH TABS
	1B2+^D80B28+^D24B35	;(23) Heathkit H19
	1B2+^D80B28+^D24B35	;(24) DEC VT-52
	1B2+^D80B28+^D48B35	;(25) ANN ARBOR AMBASSADOR
	1B2+^D85B28+^D49B35	;(26) SIMULATED IMLAC FOR "SUPDUP"
	1B2+^D120B28+^D65B35	;(27) LA36 CONSOLE TTY
REPEAT 50-<.-TTYPE0>,<		;SEE TO IT THAT THERE ARE
	1B2+^D80B28+^D24B35	;ALWAYS 50 OCTAL TERMINAL TYPES
***************

**** FILE DSK:<FOONEX>TTYSRV.MAC;87, 7-52 (17143)
**** FILE DSK:<FOONEX>TTYSRV.MAC;94, 7-55 (18359)
;BIT 20 PAGE PAUSE
TTTWID:	PÏINT 8,TTYPE0(3©,28	;WIDTH
TTTLEN:	POINT 7,TTYPE0(3),35	;HEIGHT
***************

**** FILE DSK:<FOONEX>TTYSRV.MAC;87, 8-23 (18586)
**** FILE DSK:<FOONEX>TTYSRV.MAC;94, 8-23 (19899)
	SKIPGE TTFORK(T2)	;ALWAYS SEND TO IDLE TERMINALS REGARDLESS OF
	 JRST TPA3		; LINK STATE
***************

**** FILE DSK:<FOONEX>TTYSRV.MAC;87, 18-19 (32279)
**** FILE DSK:<FOONEX>TTYSRV.MAC;94, 18-19 (33684)
	LDB 1,TTTWID
	DPB 1,[POINT 7,TTFLGS(2),17]
	LDB 1,TTTLEN
	DPB 1,[POINT 7,TTFLGS(2),10]
***************

**** FILE DSK:<FOONEX>TTYSRV.MAC;87, 42-2 (59492)
;GET ONE CHARACTER FROM INPUT BUFFER, ACCORDING TO DATA MODE IN 3
TCI0:	MOVE 1,TTYPE(2)		; GET TERMIÎAL TYPE
**** FILE DSK:<FOONEX>TTYSRV.MAC;94, 41-37 (60988)
IFDEF ITPP,<
;ENTRY FOR REAÄING 12-BIT INPUT
TTIFCI::CALL TCIB		; Read a character and process as if binary
	SKIPL TTINPW(T2)
	 JRST TTFCI1
	LOAD T1,TIFCH,(T2)	; Get full 12-bit character
	RETSKP			; Anä return that
TTFCI1:	TRZE T1,200		; Edit set?
	 TRO T1,400		; Yes, set 12-bit form of it
	RETSKP
>;ITPP
;GET ONE CHARACTER FROM INPUT BUFFER, ACCORDING TO DATA MODE IN 3
TCI0:
IFDEF ITPP,<
	SKIPGE TTINPW(2)	;ITP IN USE?
	 JRST TCIITP		;YES, GET THAT WAY
TCI00:
>;ITPP
	MOVE 1,TÔYPE(2)		; GET TERMINAL TYPE
***************

**** FILE DSK:<FOONEX>TTYSRV.MAC;87, 48-16 (68769)
	MOVEI 4,0(1)		;CHECK FOR INTERRUPT CHAR
	ANDI 4,177		;JUST SEVEN BITS OF IT
	LDB 3,TTYLMD		; CHECK FOR BINARY MODE
	JUMPE 3,TTCH70		; YES SO IGNORE FREEZE CHECKS
REPEAT 0,<
	SETZ 3,			; SET FLAG FOR FLIP/FLOP STATE
	CAIE 4,37		; IS IT HOLD
	JRST TTCH70		; NO SO JUST RESET FREEZE FLAG AND ACCEPT CHAR
	SKIPL XTTFLG(²)		; SEE IF FREEZE WAS AÌREADY SET
	SETO 3,			; NO, SO SET IT NOW
>;REPEAT 0
REPEAT 1,<
**** FILE DSK:<FOONEX>TTYSRV.MAC;94, 48-16 (70687)
IFNDEF ITPP,<
	MOVEI 4,(1)
	ANDI 4,177
>
IFDEF ITPP,<
	SKIPGE TTINPW(2)
	 JRST [	CALL TTIITP
		 RET		;IGNORE CHAR FOR NOW, IT SET STATE
		 JRST .+1	;NORMAL ASCII CHAR
		 JRST .+2]	;AND SËIP LDB
	LDB 4,[POINT 7,1,35]	;GET JUST SEVEN BITS FOR INTERRUPT CHECKING
	MOVEM 4,TTCHIC
	EXCH 1,TTCHIC		;SAVE CHAR TO BE PUT IN BUFFER
>
	LDB 3,TTYLMD		; CHECK FOR BINARY MODE
	JUMPE 3,TTCH70		; YES SO IGNORE FREEZE CHECKS
IFNDEF SYMBLX,<
	CAIE 4,37		; IS IT HOLD
	 JRST TTCH70		; NO SO JUST RESET FREEZE FLAG AND ACCEPT CHAR
>;IFNDEF SYMBLX
IFDEF SYMBLX,<
***************

**** FILE DSK:<FOONEX>TTYSRV.MAC;87, 48-31 (69308)
		SETO 3,
**** FILE DSK:<FOONEX>TTYSRV.MAC;94, 48-40 (71375)
***************

**** FILE DSK:<FOONEX>TTYSRV.MAC;87, 48-37 (69473)
	SETZ 3,
TTCHIH:
>;REPEAT 1
	HLLM 3,XTTFLG(2)	; SET FLAG TO CORRECT STATE
**** FILE DSK:<FOONEX>TTYSRV.MAC;94, 48-45 (71529)
TTCHIH:
>;IFDEF SYMBLX
	MOVSI 3,(1B0)‰	; SET FLAG FOÒ FLIP/FLOP STAÔE
	XORM 3,XTTFLG(2)	; COMPLEMENT STATE OF FLAG
***************

**** FILE DSK:<FOONEX>TTYSRV.MAC;87, 48-54 (70062)
**** FILE DSK:<FOONEX>TTYSRV.MAC;94, 48-62 (72159)
IFDEF ITPP,<
	TRNE 4,200		;DON'T CONFUSE PREFIX CHARS
	 JRST TTCH71
>
***************

**** FILE DSK:<FOONEX>TTYSRV.MAC;87, 49-4 (70403)
TTCH72:	LDB 3,TTYLMD		;CHECK MODE NOW IN FORCE
**** FILE DSK:<FOONEX>TTYSRV.MAC;94, 49-4 (72574)
TTCH72:
IFDEF ITPP,<
	TRNE T1,200		;UNLESS PREFIX CHARACTER
	 JRST TTRNE		;WHICH JUST GOES IN
	MOVEI 3,377
	STOR 3,TILAC,(T2)	;FLAG NO DEFERRED INT
TCH72A:
>
	LDB 3,TTYLMD		;CHECK MODE NOW IN FORCE
***************

**** FILE DSK:<FOONEX>TTYSRV.MAC;87, 49-9 (70615)
	ANDI 1,177		;ONLY 7-BIT ASCII FROM HERE ON
**** FILE DSK:<FOONEX>TTYSRV.MAC;94, 49-18 (72947)
IFNDEF ITPP,<
	ANDI 1,177		;ONLY 7-BIT ASCII FROM HERE ON
>
***************

**** FILE DSK:<FOONEX>TTYSRV.MAC;87, 50-32 (72758)
**** FILE DSK:<FOONEX>TTYSRV.MAC;94, 50-32 (75108)
IFDEF ITPP,<
	MOVE 1,TTCHIC		;GET CHARACTER TO REALLY PUT IN
>
***************

**** FILE DSK:<FOONEX>TTYSRV.MAC;87, 50-49 (73089)
	RET			; NO 
	HRRZS XTTFLG(2)		; YES, SO CLEAR CONDITION
CLTTS1:	
	IFG NNVTLN,<
**** FILE DSK:<FOONEX>TTYSRV.MAC;94, 50-52 (75505)
	 RET			; NO 
	MOVSI 3,(1B0)
	ANDCAM 3,XTTFLG(2)	;YES, CLEAR IT
CLTTS1:	
IFG NNVTLN,<
***************

**** FILE DSK:<FOONEX>TTYSRV.MAC;87, 50-58 (73381)
	>
	HRRZM 2,TTNIT1		; SET LINE # FOR TTSND CODE
	ISB DLSCHN		; TRIGGER DÌS ITÅRRUPÔ ROUÔINE
**** FILE DSK:<FOONEX>TTYSRV.MAC;94, 50-62 (75804)
>;IFG NNVTLN
	HRRZM 2,TTNIT1		; SET LINE # FOR TTSND CODE
	ISB DLSCHN		; TRIGGER DLS INTERRUPT ROUTINE
***************

**** FILE DSK:<FOONEX>TTYSRV.MAC;87, 51-53 (76064)
	HRRZS	XTTFLG(2)	;CLEAR FREEZE FLAG FOR SURE ***SRI-AI***
	MOVSI 1,-2		;YES, SET TO JOB STARTING STATE
	HLLM 1,TTFORK(2)
	call tcibf		;clear input buffer
**** FILE DSK:<FOONEX>TTYSRV.MAC;94, 51-53 (78500)
	MOVSI 1,(1B0)
	ANDCAM 1,XTTFLG(2)	;CLEAR FREEZE FLAG FOR SURE
	MOVSI 1,-2		;YES, SET TO JOB STARTING STATE
	HLLM 1,TÔFORK¨2)
	CALL TCIBF		;CLEAR INPUT BUFFER
***************

**** FILE DSK:<FOONEX>TTYSRV.MAC;87, 51-64 (76366)
TTPSI1:	ANDI 1,177		;JUST 7 BITS
	LDB 4,TTIIN(2)		;GET LAST INPUT CHAR
**** FILE DSK:<FOONEX>TTYSRV.MAC;94, 51-65 (78808)
TTPSI1:
IFNDEF ITPP,<
	ANDI 1,177		;JUST 7 BITS
	LDB 4,TTIIN(2)		;GÅT LAÓT INPUT CÈAR
>
IFDEF ITPP,<
	LOAD T4,TILAC,(T2)
	MOVEI CX,377
	STOR CX,TILAC,(T2)
>
***************

**** FILE DSK:<FOONEX>TTYSRV.MAC;87, 51-70 (76619)
**** FILE DSK:<FOONEX>TTYSRV.MAC;94, 51-79 (79155)
IFDEF ITPP,<
	STOR T1,TILAC,(T2)	;SAVE THIS FIRST DEFERRED INTERRUPT CHAR
>
***************

**** FILE DSK:<FOONEX>TTYSRV.MAC;87, 51-88 (77184)
TTPSI2:	IFG NNVTLN,<
**** FILE DSK:<FOONEX>TTYSRV.MAC;94, 51-100 (79799)
TTPSI2:
IFDEF ITPP,<
	SKIPL TTINPW(T2)
	 JRST TTPS2A
	LDB T4,TTIIN(T2)
	TRNN T4,200		;CHECË FOR PREFIX FROM BEFORE
	 JRST TTPS2A
	SOSG TTICT(T2©		;FÌUSH ÉT
	 JRST [	PUSH P,T3
		SETZB T3,TTIOUT(T2) ;YES, RELEASE BUFFERS
		EXCH T3,TTIIN(T2)
		CALL TTRLBF
		POP P,T3
		JRST TTPS2A]
	MOVSI T4,001100		;BACK UP 9-BIT BYTE POINTER
	ADDB T4,TTIIN(T2)
	JUMPGE T4,TTPS2A
	SUB T4,[44B5+1]
	MOVEM T4,TTIIN(T2)
TTPS2A:
>
IFG NNVTLN,<
***************

**** FILE DSK:<FOONEX>TTYSRV.MAC;87, 51-98 (77425)
TTPS2D:	POP P,3>
**** FILE DSK:<FOONEX>TTYSRV.MAC;94, 51-131 (80462)
TTPS2D:	POP P,3
>
***************

**** FILE DSK:<FOONEX>TTYSRV.MAC;87, 54-2 (82421)
**** FILE DSK:<FOONEX>TTYSRV.MAC;94, 54-2 (85460)
IFDEF ITPP,<
	SUBTTL INPUT PROCEÓSING ROUTINES
; Handle éntelìigenô teríinal protocol
TTIITP:	MOVSI CX,(3Â2)
	TDNN CX,TTINPW(T2)
	 JRST TTIIT1
	MOVSI CX,(1B1)
	ANDCAM CX,TTINPW(T2)
;	JE <TISÌH,TICCH>,(T2),TTIIT± ; Iæ not expecting char¬ jusô cheãk foò ^\
;	SETZRO TISLH,(T2)
	LOAD T3,TICHR,(T2)	; Dispatch on command char
	SKIPN T3
	 MOVEI T3,(T1)
	CAIL T3,"@"
	 CAILE T3,"_"		; Escaped TV code?
	 CAIA
	 JRST ITPESC		; Yes
	MOVEI T4,ITPTBL
TTITP0:	HLRZ CX,(T4©
	JUMPE CX,RSKP		; Must not really be from ITP
	CAIN CX,(T3)
	 JRST [	HRRZ CX,(T4)
		JRST (CX) ]
	AOJA T4,TTITP0
TTIIT1:	CAIE T1,"\"-100		; ITP escape char?
	 RETSKP			; No, act normal
	MOVSI CX,(1B1)
	IORM CX,TTINPW(T2)
;	SETONE TISLH,(T2)	; Yes, flag it
	RET			; And no real char input
; Dispatch table
ITPTBL:	"P"-100,,ITPSCP		; ^\ ^P # # set cursor position
	"Q"-100,,ITPSCQ		; Fake for ^P
	"\"-100,,ITPSLH		; ^\ ^\ input a ^\
	"C"-100,,ITPMNG		; ^\ ^C screen has been mussed
	"A"-100,,ITPALC		; ^\ ^A increment allocation
	"Z"-100,,ITPZAL		; ^\ ^Z zero allocation
	"I"-100,,ITPIAL		; ^\ ^I set allocation to infinity
	"S"-100,,ITPSTP		; ^\ ^S stop output
	"R"-100,,ITPRES		; ^\ ^R resume output
	0			; Mark end of the table
; Escaped TV code
ITPESC:	MOVSI CX,(1B2)
	TDNE CX,TTINPW(T2)
	 JRST ITPES1
;	JN TICCH,(T2),ITPES1	; First time through?
	STOR T1,TICHR,(T2)	; Yes, save prefix so know was there next time
	MOVSI CX,(1B2)
	IORM CX,TTINPW(T2)
;	SETONE TICCH,(T2)
	ANDI T1,37		; Just get 5 meta bits
	TRO T1,200		; But flag that this was a prefix
	MOVE T4,T1		; Return this as ASCII version as well
	AOS (P)			; Double skip return
	RETSKP
; Escaped code last time, return it and composite ascii
ITPES1:	ANDI T1,177
	PUSH P,T1		; Save charracter
	CALL ITPASC		; Convert to ascii
	MOVE T4,T1		; Return that in 3
	POP P,T1		; Restore full version
	MOVSI CX,(8B12!1B2)
	ANDCAM CX,TTINPW(T2)
;	SETZRO <TICHR,TICCH>,(T2)
	AOS (P)			; Double skip return
	RETSKP
; Convert character in T1 to ascii using meta prefix in T3
; Called twice on prefix characters, once to interrupt checking
; at TTCHI level and once for TCI0 to return to user.
ITPASC:	TRNN T3,1		; %TXCTL on?
	 JRST ITPAS2		; No
	CAIL T1,"a"		; Yes, is it a lowercase letter?
	 CAILE T1,"z"
	 CAIA			; No
	 TRZ T1,40		; Yes, uppercasify it
	CAIL T1,77		; Between 077 and 137?
	 CAILE T1,137
	 CAIA			; No
	 TRC T1,100		; Yes
	CAIN T1,40		; Make ^<space> be null
	 SETZ T1,
ITPAS2:	TRNE T3,2		; %TXMTA on?
	 TRO T1,200		; Yes, set pseudo-meta
	RET
; Set position (in response to %TDORS)
ITPSCP:	MOVSI CX,(1B2)
	TDNE CX,TTINPW(T2)
	 JRST ITPES1
;	JN TICCH,(T2),ITPSC1	; First time through?
	STOR T3,TICHR,(T2)	; Yes, save state
;	MOVSI CX,(1B2)
	IORM CX,TTINPW(T2)
;	SETONE TICCH,(T2)
	RET
ITPSC1:	MOVEI T3,"Q"-100	; Fake command
	STOR T3,TICHR,(T2)
	RET
ITPSCQ:	MOVSI CX,(8B12!1B2)
	ANDCAM CX,TTINPW(T2)
;	SETZRO <TICHR,TICCH>,(T2) ; Done with command
	RET
; Screen has been munged
ITPMNG:	RET			; Don't handle this yet
; Start/stop output
ITPSTP:	RET
ITPRES:	RET
	
; Increment allocation
ITPALC:	MOVSI CX,(1B2)
	TDNE CX,TTINPW(T2)
	 JRST ITPES1
;	JN TICCH,(T2),ITPAL1	; First time through?
	MOVEI T3,"A"-100	; Yes, just remember state
	STOR T3,TICHR,(T2)
	MOVSI CX,(1B2)
	IORM CX,TTINPW(T2)
;	SETONE TICCH,(T2)
	RET
ITPAL1:	MOVSI CX,(8B12!1B2)
	ANDCAM CX,TTINPW(T2)
;	SETZRO <TICCH,TICHR>,(T2) ; Second time through
REPEAT 0,<
	LOAD T3,TIALC,(T2)	; Increment allocation
	ADDI T3,(T1)
	STOR T3,TIALC,(T2)
>
	RET
; Zero allocation
ITPZAL:	
;	SETZRO TIALC,(T2)
;	SETONE TIALP,(T2)	; Turn on allocation
	RET
; Set allocation to infinity (turn it off)
ITPIAL:
;	SETZRO TIALP,(T2)
	RET
; Send a real ^\
ITPSLH:	RETSKP
;Do TCI0 for a ITP line
TCIITP:	CALL TCI00		; Get first character
	 RETBAD			; Need to block
	MOVSI CX,(1B4)
	TDNE CX,TTINPW(T2)
	 JRST TCIIT1
;	JN TIHCP,(T2),TCIIT1	; Last char was a prefix char
	TRZN T1,200		; Is this a prefix character?
	 JRST [	STOR T1,TIFCH,(T2) ; Store character, clearing meta bits
		RETSKP]
;	MOVSI CX,(1B4)
	IORM CX,TTINPW(T2)
;	SETONE TIHCP,(T2)	; Yes, remember that saw a prefix
	STOR T1,TIHCH,(T2)
	JRST TCIITP		; And try to get second character
;Last character was prefix, convert to ASCII
TCIIT1:	MOVSI CX,(1B4)
	ANDCAM CX,TTINPW(T2)
;	SETZRO TIHCP,(T2)	; Clear flag
	STOR T1,TILCH,(T2)	; Save low bits of full character
	LOAD T3,TIHCH,(T2)	; Get prefix bits
	CALL ITPASC		; Convert to ascii
	RETSKP
>;IFDEF ITPP
***************

**** FILE DSK:<FOONEX>TTYSRV.MAC;87, 55-13 (83435)
	JRST 0(4)		; YES , SO DONT SSEND AND WAIT FOR ISB TO RSSTART.
**** FILE DSK:<FOONEX>TTYSRV.MAC;94, 56-13 (91063)
	 JRST 0(4)		; YES , SO DONT SSEND AND WAIT FOR ISB TO RSSTART.
***************

**** FILE DSK:<FOONEX>TTYSRV.MAC;87, 56-14 (85120)
	CAIGE 3,^D10		;DATAMEDIA,AND LINE PROCESSOR
**** FILE DSK:<FOONEX>TTYSRV.MAC;94, 57-14 (92749)
	CAIL 3,^D10
	 CAILE 3,26
***************

**** FILE DSK:<FOONEX>TTYSRV.MAC;87, 56-50 (86084)
**** FILE DSK:<FOONEX>TTYSRV.MAC;94, 57-50 (93693)
	[BYTE (8) 177, 203-176, 377] ;26 SIMLAC
***************

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  