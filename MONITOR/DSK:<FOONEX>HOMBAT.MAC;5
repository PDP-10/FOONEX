;DSK:<FOONEX>HOMBAT.PEF;3  8-Jul-80 14:25:45, Edit by FRENCH
;INSURE PRIMARY BAT WRITTEN TO DISK WHEN INITIALIZED
;DSK:<PEFMON>HOMBAT.MAC;19 12-Jun-80 12:42:24, Edit by FRENCH
;HANDLE UDSKIO ERROR IF ERROR BITS RETURNED IN AC 1
;DSK:<PEFMON>HOMBAT.MAC;18  9-Jun-80 13:47:57, Edit by FRENCH
;DON'T LET DEDRM CLOBBER 5,6 IN NTRBAT
;DSK:<PEFMON>HOMBAT.MAC;16  9-Jun-80 13:38:44, Edit by FRENCH
;DEDRM RETURNS +3 FOR SUCCESS, HANDLE IT
;ADD LOGIC FOR "BAD BUT IN USE" TABLES
;DSK:<FOONEX>HOMBAT.MAC;2  4-Jun-80 15:45:42, Edit by FRENCH
;RENAME SUPPORT STUFF FOR NO CNOFLICT WITH MACSYM STUFF
;DSK:<PEFMON>HOMBAT.MAC;35 29-May-80 13:46:51, Edit by FRENCH
;DON'T LEAVE ANY LOGICAL PACK IDENT IN BAT BLOCKS SO TRANSPORTABLE
;DSK:<PEFMON>HOMBAT.MAC;25 14-May-80 17:34:44, Edit by FRENCH
;ADDED HOMBAT PARAMETER TABLE FOR GETAB
;MOVE HDWR DISK ADR FORMAT SPEC TO PARAMS
;DSK:<PEFMON>HOMBAT.MAC;23 14-May-80 14:19:01, Edit by FRENCH
;SINCE DSKABT IN PARAMS NOW, USE IT SYMBOLICLLY INSTEAD OF 1B14

;HOME BLOCK AND BAT BLOCK STUFF

	SEARCH	STENEX,PROLOG
	TITLE	HOMBAT

INTERN HOMBAT,NHOMBA
INTERN XB1TBL,XB2TBL
INTERN HM1TBL,HM2TBL,BB1TBL,BB2TBL
INTERN MCDTBL,MICTBL,BOTTBL
INTERN MONADR,CDLADR,CDHADR
INTERN CRTHMA,CRTHOM,CRTBAA,CRTBAT,CRTBFA,CRTBAF
INTERN CRTSFA,DEFDIA
INTERN DOBDSA,DOBDRA,DOBDDA,DOBAT
INTERN NTRBAT
INTERN CRASH,RELOAD

EXTERN DSKASA,DSKASN,DEDSK,DSKDTB,NSECPG,SWPTK,SWPTKH,NSECTK
EXTERN UDSKIO
EXTERN ASDRMS,DEDRM,DRMFRE,DRMSEC,DRMBND
EXTERN CVDSK,CDSKVA,CVADSW
EXTERN DIDSCA,DIDSCI,FDDSCA,FILIFG
EXTERN ASOFN,ASGPAG,SETMPG,RELPAG,RELOFN,FPTA,MLKPG,MULKPG
EXTERN GETFDB,USTDIR,JFNOFN
EXTERN BUGCHK,BUGHLT
EXTERN SYSGO,DBUGSW

	RESCD

;MODULE FLAGS

BATDBG:	Z		;NON-0 TO ALLOW INIT OF GOOD BATS WHEN DBUGSW/ 2
BATMAX:	^D500		;MAX BAD SPOTS CDC SAYS WE WILL SEE


;STORAGE

LS (HBXSTF)		;NON-ZERO IF HOMBAT FILES EXIST ON ALL PACKS


;WARNING: THE FOLLOWING MACROS USE ACS 14,15 BUT ARE RESTORED
;	  OUTSIDE THE CONTEXT OF THE SUPPORT PROCESSORS.
;	  .A16 IS ALWAYS CLOBBERED

.A16==16			;SCRATCH AC

.FPV==15			;FRAME PTR FOR VARMAC

;TRANSIENT VARIABLE MACRO

DEFINE VARMAC (VARS)<
	..VRR==10		;;REMEMBER CURRENT RADIX
	RADIX 8
	..VNV==1		;;INIT COUNT OF STACK WORDS
	IRP VARS,<
	  .VAR1 (VARS)>		;;PROCESS LIST
	JSP .A16,.VRSET		;;ALLOCATE STACK SPACE, SETUP .FP
	 ..VNV-1,,..VNV-1
	RADIX ..VRR		;;RESTORE RADIX
	PURGE ..VRR,..VNV>	;;CLEAN UP

DEFINE .VAR1 (VAR)<
	.VAR2 (VAR)>		;;PEEL OFF ANGLEBRACKETS IF ANY

DEFINE .VAR2 (NAM,SIZ)<
	.VAR3 (NAM,\..VNV)	;;DEFINE VARIABLE
	IFB <SIZ>,<..VNV=..VNV+1>
	IFNB <SIZ>,<..VNV=..VNV+SIZ>>

DEFINE .VAR3 (NAM,LOC)<
   IFDEF NAM,<.IF NAM,SYMBOL,<PRINTX VARMAC NAM ALREADY DEFINED>>
	DEFINE NAM<^O'LOC(.FPV)>>



.FPA==14				;FRAME PTR FOR ACMAC

;AC 1-4 SAVER AND RESTORER

DEFINE ACMAC (ARGS)<
	..ARR==10		;;SAVE RADIX
	RADIX 8
	..ANV==1		;;INIT ARG COUNT
	IRP ARGS,<
	  .ACV1 (ARGS)>		;;DEFINE ARG SYMBOL
	IFG ..ANV-5,<PRINTX ?TOO MANY ARGUMENTS: ARGS>
	JSP .A16,.ACSET		;;SETUP STACK
	RADIX ..ARR		;;RESTORE RADIX
	PURGE ..ARR,..ANV>

DEFINE .ACV1 (VAR)<
	.ACV2 (VAR)>		;;PEEL OFF ANGLEBRACKETS IF ANY

DEFINE .ACV2 (NAM,SIZ)<
	.ACV3 (NAM,\..ANV)	;;DEFINE VARIABLE
	IFB <SIZ>,<..ANV=..ANV+1>
	IFNB <SIZ>,<..ANV=..ANV+SIZ>>

DEFINE .ACV3 (NAM,LOC)<
   IFDEF NAM,<.IF NAM,SYMBOL,<PRINTX ACMAC NAM ALREADY DEFINED>>
	DEFINE NAM<^O'LOC(.FPA)>>



;MACRO TO SAVE FRAME PTRS INCASE SOME ROUTINE CLOBBERS IT

DEFINE SFRAME
<	PUSH P,.FPA
	PUSH P,.FPV
>

;MACRO TO RESTORE FRAME PTRS SAVED BY SFRAME

DEFINE RFRAME
<	POP P,.FPV
	POP P,.FPA
>



;SUPPORT ROUTINE FOR VARMAC

.VRSET::PUSH P,.FPV		;PRESERVE OLD .FPV
	MOVE .FPV,P		;SETUP FRAME PTR
	ADD P,0(.A16)		;ALLOCATE SPACE
	JUMPGE P,VRSOV
VRSET1:	PUSHJ P,1(.A16)		;CONTINUE ROUTINE, EXIT VIA .+1
.VRRET::CAIA			;NO SKIP
	 AOS -1(.FPV)		;SKIP
	MOVEM .FPV,P
	POP P,.FPV
	POPJ P,

VRSOV:	SUB P,0(.A16)		;STACK OVERFLOW - UNDO ADD
	HLL .A16,0(.A16)	;GET COUNT
VRSOV1:	PUSH P,[0]		;DO ONE PUSH AT A TIME, GET REGULAR
	SUB .A16,[1,,0]		; ACTION ON OVERFLOW
	TLNE .A16,777777	;COUNT TO 0?
	JRST VRSOV1		;NO, KEEP PUSHING
	JRST VRSET1		;CONTINUE SETUP


;SUPPORT ROUTINE FOR ACMAC

.ACSET::PUSH P,.FPA		;SAVE .FPA
	MOVE .FPA,P		;SETUP FRAME POINTER
	PUSH P,1		;DO WITH PUSH, GET INTERRUPT...
	PUSH P,2
	PUSH P,3
	PUSH P,4
ACSET1:	PUSHJ P,0(.A16)		;CONTINUE ROUTINE
.ACRET::CAIA			;NO SKIP
	 AOS -1(.FPA)		;SKIP
	POP P,4			;RESTORE ACS
	POP P,3
	POP P,2
	POP P,1
	MOVEM .FPA,P
	POP P,.FPA
	POPJ P,


;ASSEMBLY OF SENSITIVE PAGE HARDWARE ADRS FOR ASSIGNMENT TO ERROR FREE AREA
;ON CDC WINCHESTER DRIVES
;CYL 0, HEADS 0 AND 1 ARE AVAILABLE.
;HEAD 1 IS ASSUMED SAFER THAN HEAD 0 (LESS CHANCE OF HUMAN ERROR CLOBBERING IT)
;CYL 0, HEADS 0 AND 1, SECTOR 0 ARE ASSUMED UNSAFE (MUCH CHANCE OF HUMAN ERROR)


;LAYOUT
;* DENOTES MAY NOT BE PRESENT (USUALLY ONLY FOUND ON PACK 0 OF A STRUCTURE)
;
;CYLINDER 0, HEAD 0 (TRACK 0)
;
;				    SECTOR #
;    0        1         2         3         4         5         6         7
;------------------------------------------------------------------------------
;        !         ! HOMBAT  ! HOME    ! BAT     ! DEFAULT ! CRASH   ! CRASH
;        !         ! FILE 2  ! BLOCK 2 ! BLOCK 2 ! MONITOR ! DMP LOW ! DMP HIGH
;        !         ! XB      !         !         ! XB *    ! XB *    ! XB *
;------------------------------------------------------------------------------
;
;
;CYLINDER 0, HEAD 1 (TRACK 1)
;
;				    SECTOR #
;    0        1         2         3         4         5         6         7
;------------------------------------------------------------------------------
;        !         ! HOMBAT  ! HOME    ! BAT     ! MICRO   ! MICRO   ! BOOT
;        !         ! FILE 1  ! BLOCK 1 ! BLOCK 1 ! CODE    ! DIAG    ! STRAP
;        !         ! XB      !         !         ! XB      ! XB      ! XB
;------------------------------------------------------------------------------


;SENSITIVE PAGE ASSIGNMENT DEFINITIONS

;UNITS

PRMUNT==0		;PRIMARY UNIT OF A STRUCTURE

;CYLINDERS

CYLALL==0		;ALL IN CYLINDER 0

;SURFACES

SRFXB1==1		;PRIMARY HOMBAT XB
SRFHM1==1		;PRIMARY HOMEBLOCK
SRFBB1==1		;PRIMARY BAT BLOCK
SRFXB2==0		;SECONDARY HOMBAT XB
SRFHM2==0		;SECONDARY HOMEBLOCK
SRFBB2==0		;SECONDARY BAT BLOCK
SRFMIC==1		;MICROCODE XB
SRFMCD==1		;MICRO DIAGNOSTICS XB
SRFBOT==1		;BOOTSTRAP XB
SRFMON==0		;DEFAULT MONITOR XB
SRFCDL==0		;CRASH DUMP XB LOW
SRFCDH==0		;CRASH DUMP XB HIGH

;SECTORS

SECXB1==2		;PRIMARY HOMBAT XB
SECHM1==3		;PRIMARY HOMEBLOCK
SECBB1==4		;PRIMARY BAT BLOCK
SECXB2==2		;SECONDARY HOMBAT XB
SECHM2==3		;SECONDARY HOMEBLOCK
SECBB2==4		;SECONDARY BAT BLOCK
SECMIC==5		;MICROCODE XB
SECMCD==6		;MICRO DIAGNOSTICS XB
SECBOT==7		;BOOTSTRAP XB
SECMON==5		;DEFAULT MONITOR XB
SECCDL==6		;CRASH DUMP XB LOW
SECCDH==7		;CRASH DUMP XB HIGH



;TABLE OF INDEX BLOCK ADRS FOR PRIMARY HOMBAT FILES FOR ALL PACKS
;INDEXED BY PACK #

..U==0
XB1TBL:	REPEAT NPACKS,<

<..U>B<UNTLSB>+<CYLALL>B<CYLLSB>+<SRFXB1>B<SRFLSB>+<SECXB1>B<SECLSB>
..U==..U+1
			> ;END OF REPEAT NPACKS

;TABLE OF INDEX BLOCK ADRS FOR SECONDARY HOMBAT FILES FOR ALL PACKS
;INDEXED BY PACK #

..U==0
XB2TBL:	REPEAT NPACKS,<

<..U>B<UNTLSB>+<CYLALL>B<CYLLSB>+<SRFXB2>B<SRFLSB>+<SECXB2>B<SECLSB>
..U==..U+1
			> ;END OF REPEAT NPACKS

;TABLE OF ADRS FOR PRIMARY HOMEBLOCKS FOR ALL PACKS
;INDEXED BY PACK #

..U==0
HM1TBL:	REPEAT NPACKS,<

<..U>B<UNTLSB>+<CYLALL>B<CYLLSB>+<SRFHM1>B<SRFLSB>+<SECHM1>B<SECLSB>
..U==..U+1
			> ;END OF REPEAT NPACKS

;TABLE OF ADRS FOR SECONDARY HOMEBLOCKS FOR ALL PACKS
;INDEXED BY PACK #

..U==0
HM2TBL:	REPEAT NPACKS,<

<..U>B<UNTLSB>+<CYLALL>B<CYLLSB>+<SRFHM2>B<SRFLSB>+<SECHM2>B<SECLSB>
..U==..U+1
			> ;END OF REPEAT NPACKS

;TABLE OF ADRS FOR PRIMARY BATBLOCKS FOR ALL PACKS
;INDEXED BY PACK #

..U==0
BB1TBL:	REPEAT NPACKS,<

<..U>B<UNTLSB>+<CYLALL>B<CYLLSB>+<SRFBB1>B<SRFLSB>+<SECBB1>B<SECLSB>
..U==..U+1
			> ;END OF REPEAT NPACKS

;TABLE OF ADRS FOR SECONDARY BATBLOCKS FOR ALL PACKS
;INDEXED BY PACK #

..U==0
BB2TBL:	REPEAT NPACKS,<

<..U>B<UNTLSB>+<CYLALL>B<CYLLSB>+<SRFBB2>B<SRFLSB>+<SECBB2>B<SECLSB>
..U==..U+1
			> ;END OF REPEAT NPACKS


;OTHER SENSITIVE PAGES TO BE ASSIGNED TO ERROR FREE AREAS

;TABLE OF ADRS FOR MICRO CODE FILE FOR ALL PACKS
;INDEXED BY PACK #

..U==0
MICTBL:	REPEAT NPACKS,<

<..U>B<UNTLSB>+<CYLALL>B<CYLLSB>+<SRFMIC>B<SRFLSB>+<SECMIC>B<SECLSB>
..U==..U+1
			> ;END OF REPEAT NPACKS



;TABLE OF ADRS FOR MICRO DIAG FILE FOR ALL PACKS
;INDEXED BY PACK #

..U==0
MCDTBL:	REPEAT NPACKS,<

<..U>B<UNTLSB>+<CYLALL>B<CYLLSB>+<SRFMCD>B<SRFLSB>+<SECMCD>B<SECLSB>
..U==..U+1
			> ;END OF REPEAT NPACKS

;TABLE OF ADRS FOR BOOTSTRAP FILE FOR ALL PACKS
;INDEXED BY PACK #

..U==0
BOTTBL:	REPEAT NPACKS,<

<..U>B<UNTLSB>+<CYLALL>B<CYLLSB>+<SRFBOT>B<SRFLSB>+<SECBOT>B<SECLSB>
..U==..U+1
			> ;END OF REPEAT NPACKS


;FOUND ON PRIMARY PACK ONLY

;DEFAULT MONITOR INDEX BLOCK ADR

MONADR==<PRMUNT>B<UNTLSB>+<CYLALL>B<CYLLSB>+<SRFMON>B<SRFLSB>+<SECMON>B<SECLSB>

;CRASH DUMP INDEX BLOCK ADR LOW

CDLADR==<PRMUNT>B<UNTLSB>+<CYLALL>B<CYLLSB>+<SRFCDL>B<SRFLSB>+<SECCDL>B<SECLSB>


;CRASH DUMP INDEX BLOCK ADR HIGH

CDHADR==<PRMUNT>B<UNTLSB>+<CYLALL>B<CYLLSB>+<SRFCDH>B<SRFLSB>+<SECCDH>B<SECLSB>



;HOMBLOCK DEFINITIONS

DEFINE DEFHOM (SUFFIX)
<	IRP SUFFIX, <HOM'SUFFIX==..N
		     ..N==..N+1>
>

..N==0		;INIT COUNTER FOR MACRO

DEFHOM <NAM,ID,VER,HW0,HW1,HW2,HW3,HW4>		;00 : 07
DEFHOM <HB1,HB2,MDA,MDF,MCA,MCF,BTA,BTF>	;10 : 17
DEFHOM <MNA,MNF,CLA,CLF,CHA,CHF,SNM,SFG>	;20 : 27
DEFHOM <SPK,PFG,SWP,NX1,NX2,DR1,DR2,SPR>	;30 : 37

..N==HOMLEN-2	;2ND PART INIT COUNTER FOR MACRO

DEFHOM <COD,SLF>				;HOMLEN-2,HOMLEN-1

;PARAMETERS

VERHOM==1		;VERSION
HOMLEN==1000		;FULL PAGE DEVOTED TO HOMEBLOCK
CODHOM==707070


;FLAGS ASSEMBLED INTO HOME BLOCKS

MCDFGS==0		;MICRO DIAG FLAGS
MICFGS==0		;MICRO CODE FLAGS
BOTFGS==0		;BOOTSTRAP FLAGS
MONFGS==0		;DEFAULT MONITOR FLAGS
CDLFGS==0		;CRASH DUMP FLAGS LOW
CDHFGS==0		;CRASH DUMP FLAGS HIGH
STRFGS==0		;STRUCTURE FLAGS
PAKFGS==0		;PACK FLAGS



;HOMEBLOCK PROTOTYPE (.-. TO BE FILLED IN)

HOMPRO:	SIXBIT /HOME/					;HOMNAM
	.-.						;HOMID
	VERHOM,,HOMLEN					;HOMVER
	<NUNTBT>B8+<NCYLBT>B17+<NSRFBT>B26+<NSECBT>B35	;HOMHW0
	NTKUN,,NSURFS					;HOMHW1
	NSECS,,NWSEC					;HOMHW2
	<NTKUN*NSURFS*NSECS>,,<NSURFS*NSECS>		;HOMHW3
	0						;HOMHW4
	.-.						;HOMHB1
	.-.						;HOMHB2
	.-.						;HOMMDA
	MCDFGS						;HOMMDF
	.-.						;HOMMCA
	MICFGS						;HOMMCF
	.-.						;HOMBTA
	BOTFGS						;HOMBTF
	MONADR						;HOMMNA
	MONFGS						;HOMMNF
	CDLADR						;HOMCLA
	CDLFGS						;HOMCLF
	CDHADR						;HOMCHA
	CDHFGS						;HOMCHF
	SIXBIT /PS/					;HOMSNM
	STRFGS						;HOMSFG
	NPACKS,,.-.					;HOMSPK
	PAKFGS						;HOMPFG
	SWPTK,,SWPTKH-1					;HOMSWP

HOMPLN==.-HOMPRO		;LENGTH OF A HOME BLOCK PROTOTYPE



;CALL CRTHOM FOR ALL PACKS

CRTHMA:	PUSH P,1
	PUSH P,2
	HRROI 1,[ASCIZ/
Creating HOME Blocks and associated files./]
	PSOUT
	MOVSI 2,-NPACKS		;AOBJN FOR PACKS
CRTHM1:	HRRZ 1,2		;LOGICAL PACK # IN 1
	CALL CRTHOM
	AOBJN 2,CRTHM1
	POP P,2
	POP P,1
	AOS HBXSTF			;SAY HOMBAT FILES EXIST
	RET

;CREATE HOME BLOCKS FOR PACK
;ACCEPTS LOGICAL PACK # IN 1

CRTHOM:	ACMAC <%UNIT,%AC2,%AC3,%AC4>	;SAVE ACS
	VARMAC <$HBN,$PAGE,$OFN,$JFN>	;RESERVE INFO STUFF
	MOVEI 2,1			;INDEX BLOCK 1
	MOVEM 2,$HBN			;SAVE FOR FUTURE REF
CRTHO1:	MOVE 1,%UNIT
	CALL MPHMXB			;MAP THE INDEX BLOCK
	MOVE 1,%UNIT
	MOVE 2,$HBN
	MOVEM 3,$PAGE			;REMEMBER MAPPED PAGE ADR
	MOVEM 4,$OFN			;AND THE OFN
	CALL STHMXB			;SET UP XB
	MOVE 3,$PAGE
	MOVE 4,$OFN
	CALL RLHMXB			;RELEASE THE XB
	MOVE 1,%UNIT
	MOVE 2,$HBN
	CALL MKHMFL			;MAKE AND RELEASE FILE
	MOVE 1,%UNIT
	MOVE 2,$HBN
	CALL MAPHOM			;NOW USE FILE TO MAP HB
	 BUG (HLT,<CRTHOM: FAILED TO MAP JUST CREATED HB>)
	MOVEM 3,$PAGE			;KNOW PAGE ITS MAPPED TO
	MOVEM 4,$JFN			;KNOW JFN
	MOVE 1,%UNIT
	MOVE 2,$HBN
	CALL FILLHB			;FILL HB
	MOVE 1,%UNIT
	MOVE 2,$HBN
	MOVE 3,$PAGE
	MOVE 4,$JFN
	TLO 3,(1B0)			;INSURE IT GETS TO DISK
	CALL RELHOM			;RELEASE HB
	  BUG (HLT,<CRTHOM: FAILED TO RELEASE HB>)
	AOS 2,$HBN			;DO BOTH PRIMARY AND SECONDARY
	CAIG 2,2
	 JRST CRTHO1			;LOOP FOR NEXT
	RET

	PURGE %UNIT,%AC2,%AC3,%AC4
	PURGE $HBN,$PAGE,$OFN,$JFN


;ASSIGN AND MAP XB FOR HOME BLOCK
;ACCEPTS 1/ LOGICAL UNIT #
;	 2/ HOME BLOCK #

;RETURNS 3/ PAGE ADR MAPPED TO
;	 4/ OFN

MPHMXB:	MOVEI 0,TYPHOM		;TYPE OF BLOCK ITS FOR
	JRST MAPXB


;FILL OUT HOME XB AND ASSIGN HOME BLOCK SO NOT POINTING TO UNASSIGNED PAGE
;ACCEPTS 1/ LOGICAL PACK #
;	 2/ HOME BLOCK #
;	 3/ PAGE ITS MAPPED TO

STHMXB:	MOVEI 0,TYPHOM
	JRST SETXB


;UNMAP AND RELEASE HOME XB
;ACCEPTS 3/ PAGE ITS MAPPED TO
;	 4/ OFN

RLHMXB:	MOVEI 0,TYPHOM
	JRST RELXB


;CREATES AND RELEASES HOMEBLOCK FILE PTING TO PROPER XB
;ACCEPTS 1/ LOGICAL UNIT #
;	 2/ # OF BLOCK INVOLVED

MKHMFL:	MOVEI 0,TYPHOM
	JRST MAKFL


;MAP HOMEBLOCK TO PAGE, READ AND WRITE
;ACCEPTS 1/ LOGICAL UNIT #
;	 2/ HB #

;RETURNS 3/ PAGE ADR
;	 4/ JFN

;SKIPS IF SUCCESS, NO SKIP POSSIBLY WITH ERROR CODE IN 1

MAPHOM:	MOVEI 0,TYPHOM
	SKIPN FILIFG			;OK TO USE FILE SYSTEM YET?
	 JRST MP.BLK			;NO-JUST READ IT IN
	JRST MAPBLK


;UNMAP AND RELEASE HOMEBLOCK
;WRITING TO DISK IS ONLY MEANINGFUL IF THE FILESYSTEM IS NOT BEING
;USED FOR THE MAPPING.  ITS FOR HARD DISK WRITING ONLY WHEN NECESSARY
;WEN NOT USING THE FILESYSTEM FOR MAPPING.

;ACCEPTS 1/ UNIT
;	 2/ BLOCK #
;	 3/ PAGE ADR ITS MAPPED TO, 1B0 ON FOR WRITE IT TO DISK
;	 4/ JFN

;SKIPS IF SUCCESS, NO SKIP WITH ERROR CODE IN 1

RELHOM:	MOVEI 0,TYPHOM
	SKIPN FILIFG			;OK TO USE FILE SYSTEM YET?
	 JRST RL.BLK			;NO-UNMAP IT WITHOUT ITS HELP
	TLZ 3,(1B0)			;CLEAR WRITE FLAG, WRITING MEANINGLESS
	JRST RELBLK



;FILL OUT HOME BLOCK
;ACCEPTS 1/ LOGICAL UNIT #
;	 2/ HB #
;	 3/ PAGE ADR ITS MAPPED TO

FILLHB:	ACMAC <%UNIT,%HBN,%PAGE,%AC4>
	MOVE 3,%PAGE			;3/ MAPPED ADR
	HRLI 1,HOMPRO			;PROTOTYPE
	HRR 1,%PAGE			;TO HERE
	BLT 1,HOMPLN-1(3)		;COPY PROTO TO MAPPED HB
	HRLI 1,HOMPLN(3)		;AND CLEAR REST OF BLOCK
	HRRI 1,HOMPLN+1(3)
	SETZM HOMPLN(3)
	BLT 1,HOMLEN-1(3)
	MOVE 1,%HBN			;NOW FILL IT OUT
	ADDI 1,'0'			;MAKE # SIXBIT
	DPB 1,[POINT 6,HOMID(3),5]
	MOVE 2,%UNIT
	MOVE 1,XB1TBL(2)		;PRIMARY HOMBAT XB FOR UNIT
	MOVEM 1,HOMHB1(3)
	MOVE 1,XB2TBL(2)		;SECONDARY HOMBAT XB FOR UNIT
	MOVEM 1,HOMHB2(3)
	MOVE 1,MCDTBL(2)		;MICRO DIAG XB
	MOVEM 1,HOMMDA(3)
	MOVE 1,MICTBL(2)		;MICRO CODE XB
	MOVEM 1,HOMMCA(3)
	MOVE 1,BOTTBL(2)		;BOOTSTRAP XB
	MOVEM 1,HOMBTA(3)
	HRRM 2,HOMSPK(3)		;LOGICAL UNIT #
	MOVE 1,DIDSCA			;INDEX.;1 XB ADR LINEAR
	CALL CVDSK			;MAKE HARDWARE ADR
	MOVE 3,%PAGE
	MOVEM 1,HOMNX1(3)
	SETZM HOMNX2(3)			;NO BACKUP INDEX.;2 CURRENTLY
	MOVE 1,FDDSCA			;DIRECTORY.;1 XB ADR LINEAR
	CALL CVDSK			;MAKE HARDWARE ADR
	MOVE 3,%PAGE
	MOVEM 1,HOMDR1(3)
	SETZM HOMDR2(3)			;NO BACKUP DIRECTORY.;2 CURRENTLY
	MOVEI 1,CODHOM			;SPECIAL CODE
	MOVEM 1,HOMCOD(3)
	MOVE 4,%HBN
	MOVE 2,%UNIT
	MOVE 1,HM1TBL(2)		;ASSUME PRIMARY HB ADR FOR UNIT
	CAIE 4,1			;IS IT?
	 MOVE 1,HM2TBL(2)		;NO-GET SECONDARY HB ADR FOR UNIT
	MOVEM 1,HOMSLF(3)		;STORE PTR TO SELF
	RET

	PURGE %UNIT,%HBN,%PAGE,%AC4



;CHECK HOME BLOCK CONSISTENCY

;ACCEPTS 1/ PAGE HOME BLOCK IS MAPPED TO
;RETURNS +1 LOOKS BAD
;	 +2 LOOKS OK

;DOES NOT CHECK XB ADRS, FLAGS, ETC. SINCE MAY BE CHANGED ON THE
;FLY OR DURING TRYING TO PIECE BROKEN SYSTEM TOGETHER

CHKHOM:	ACMAC <%PAGE,%AC2,%AC3,%AC4>
	MOVE 2,HOMNAM(1)
	CAME 2,[SIXBIT/HOME/]
	 RET
	MOVE 2,HOMID(1)
	CAME 2,[SIXBIT/1/]
	CAMN 2,[SIXBIT/2/]
	 CAIA
	RET
	MOVE 2,HOMVER(1)
	CAME 2,[VERHOM,,HOMLEN]
	 RET
	MOVE 2,HOMHW0(1)
	CAME 2,[<NUNTBT>B8+<NCYLBT>B17+<NSRFBT>B26+<NSECBT>B35]
	 RET
	MOVE 2,HOMHW1(1)
	CAME 2,[NTKUN,,NSURFS]
	 RET
	MOVE 2,HOMHW2(1)
	CAME 2,[NSECS,,NWSEC]
	 RET
	MOVE 2,HOMHW3(1)
	CAME 2,[<NTKUN*NSURFS*